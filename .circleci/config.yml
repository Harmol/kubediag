version: 2.1
jobs:
  # Compile and test code.
  compile_and_test:
    machine: 
      image: ubuntu-2004:202010-01
      docker_layer_caching: true
    working_directory: ~/go/src/github.com/kubediag/kubediag
    steps:
      - checkout
      - run:
          name: Install kustomize
          command: |
            make kustomize
      - run:
          name: Verify code
          command: |
            export TAG=v0.2.2
            make fmt && make vet && go mod vendor && go mod tidy && make manifests
            if [ -n "$(git diff --name-only)" ] ; then exit 1; fi
      - run:
          name: Compile code
          command: |
            make kubediag
      - run:
          name: Run unit tests
          command: |
            make test
      # run e2e test
      - run:
          name: Create cluster
          command: |
            swapoff -a
            apt-get update && apt-get install -y apt-transport-https ca-certificates curl
            sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl=1.17.3-00 kubelet=1.17.3-00 kubeadm=1.17.3-00
            sudo apt-mark hold kubelet kubeadm kubectl
            sudo kubeadm init --pod-network-cidr=10.244.0.0/16
            mkdir -p $HOME/.kube
            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
            kubectl taint nodes --all node-role.kubernetes.io/master-
            kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.18.1/Documentation/kube-flannel.yml
      - run:
          name: Run e2e tests
          command: |
            # Deploy cert-manager in the configured Kubernetes cluster
            kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.4/cert-manager.yaml
            kubectl wait deployment/cert-manager --for=condition=available --timeout=300s -n cert-manager
            kubectl wait deployment/cert-manager-cainjector --for=condition=available --timeout=300s -n cert-manager
            kubectl wait deployment/cert-manager-webhook --for=condition=available --timeout=300s -n cert-manager
            kubectl create ns kubediag
            make install
            # disable prometheus in e2e test
            sed -i '25d' config/default/kustomization.yaml
            make manifests
            make docker-build
            # build deployment and service first
            kubectl apply -f config/deploy/manifests.yaml
            kubectl --namespace kubediag wait --for=condition=ready --timeout=300s pod -l mode=agent
            kubectl --namespace kubediag wait --for=condition=ready --timeout=300s pod -l mode=master
            # wait for webhook service ready
            for (( c=1; c<=5; c++ )); do if( kubectl apply -f config/deploy/ ); then break ;fi ;sleep 10; done
            make e2e
  # Build and push docker image.
  build_and_push:
    environment:
      DOCKER_REGISTRY: hub.c.163.com
      REPO_NAME: hub.c.163.com/kubediag/ci-test
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $REPO_NAME:$CIRCLE_TAG .
      - run:
          name: Docker login
          command: |
            echo "$DOCKER_PASSWORD" | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Push Docker image
          command: |
            docker push $REPO_NAME:$CIRCLE_TAG

workflows:
  version: 2
  # Build workflow is triggered on pull request event.
  # This project is configured to only run builds that have open pull requests associated with them.
  build:
    jobs:
      - compile_and_test:
          filters:
            branches:
              ignore: master
  # Release workflow is triggered on tag event.
  release:
    jobs:
      - compile_and_test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build_and_push:
          requires:
            - compile_and_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
